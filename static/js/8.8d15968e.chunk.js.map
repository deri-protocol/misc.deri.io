{"version":3,"sources":["pages/Pool/img/staked.svg","pages/Pool/Card.js"],"names":["PairAddress","Card","lang","pool","wallet","history","useHistory","defaultList","useState","poolInfo","setPoolinfo","address","setAddress","isStaked","setIsStaked","xvsNum","setXvsNum","setShow","aTimeRewardInfo","setATimeRewardInfo","bTimeRewardInfo","setBTimeRewardInfo","totalYearDeri","setTotalYearDeri","accountEthTokenValue","setAccountEthTokenValue","apy","setApy","accountDeriToken","setAccountDeriToken","DeriforPairContract","useContract","EthforPairContract","PoolContract","BTokenContract","PairContract","getPoolInfo","useCallback","chainId","version","res","getLiquidity","balanceOf","DeriNumber","EthNumber","deriPath","process","fetch","resp","json","axios","get","eresp","ethPrice","data","deriPrice","price","deriAmount","BigNumber","from","_hex","toString","ethAmount","deriValue","bg","times","toNumber","ethValue","liquidity","console","log","getVenusEarned","getIsStaked","poolAddress","bTime","id","setTimeout","provider","getProvider","connect","contract","map","item","obj","getSecondsPerLiquidityInsideX128","timestamp","secondsPerLiquidityInsideX128","Promise","all","aTime","getBTokenValue","positions","tickLower","tickUpper","slot0","tickCurrent","tick","amount","getAmountETHAndDeri","total_amount0","total_amount1","deri","eth","deriSum","reduce","accumulator","currentValue","ethSum","getApy","sumValue","totalYearDeriValue","getTimeRewardInfo","rewards","find","secondsPerLiquidityInsideX128_a","getRewardInBetween","reward","Math","abs","totalScore","valuePerYear","onImgError","event","target","src","errorimg","useEffect","isConnected","detail","account","sess","sessionStorage","getItem","length","chainMap","url","type","className","onClick","push","staking","retired","new","alt","BSC","POLYGON","ETH","ARBITRUM","ZKSYNC","networkLogo","zone","chain","toUpperCase","isLp","bTokens","bTokenSymbol","index","onError","singleBtoken","TokenExplode","value","suffix","displayType","allowZero","decimalScale","thousandSeparator","stakedLogo","width","disabled","outline","label","TokenWrapper","styled","div","Token","props","rotate","angle","filter","t","i","token","curRotate"],"mappings":"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","file":"static/js/8.8d15968e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/staked.46571832.svg\";","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport DeriNumberFormat from \"../../utils/DeriNumberFormat\"\r\nimport Button from '../../components/Button/Button'\r\nimport BSC from '../../assets/img/BNB.svg'\r\nimport ARBITRUM from '../../assets/img/arbitrum-logo.svg'\r\nimport POLYGON from '../../assets/img/polygon-logo.svg'\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport ZKSYNC from '../../assets/img/zkSync-logo.svg'\r\nimport stakedLogo from './img/staked.svg'\r\nimport errorimg from '../../assets/img/ErrorImg.png'\r\nimport './card.less'\r\nimport styled, { StyleSheetManager } from 'styled-components';\r\nimport useContract from '../../hooks/useContractLp';\r\nimport { BigNumber } from 'ethers';\r\nimport { bg, getAmountETHAndDeri, getProvider } from '../../utils/utils';\r\nimport axios from 'axios';\r\nconst DeriAddress = \"0x21E60EE73F17AC0A411ae5D690f908c3ED66Fe12\"\r\nconst ETHAddress = \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\"\r\nconst PairAddress = \"0x96C3966534b4377691e11e163A0409Ad01667343\"\r\nexport default function Card({ lang, pool, wallet }) {\r\n  const history = useHistory();\r\n  const defaultList = ['311860', '311904']\r\n  const [poolInfo, setPoolinfo] = useState({})\r\n  const [address, setAddress] = useState(pool.address)\r\n  const [isStaked, setIsStaked] = useState(false)\r\n  const [xvsNum, setXvsNum] = useState()\r\n  const [show, setShow] = useState(true)\r\n  const [aTimeRewardInfo, setATimeRewardInfo] = useState([])\r\n  const [bTimeRewardInfo, setBTimeRewardInfo] = useState([])\r\n  const [totalYearDeri, setTotalYearDeri] = useState(0)\r\n  const [accountEthTokenValue, setAccountEthTokenValue] = useState(0)\r\n  const [apy, setApy] = useState()\r\n  const [accountDeriToken, setAccountDeriToken] = useState(0)\r\n  const DeriforPairContract = useContract(\"ERC20\", 42161, DeriAddress)\r\n  const EthforPairContract = useContract(\"ERC20\", 42161, ETHAddress)\r\n  const PoolContract = useContract(\"arbitrumLp\", 42161)\r\n  const BTokenContract = useContract(\"LpTokenId\", 42161)\r\n  const PairContract = useContract(\"PairAbi\", 42161)\r\n  const getPoolInfo = useCallback(async () => {\r\n    setPoolinfo({})\r\n    let res = await pool.getPoolInfo(pool.address, pool.chainId, pool.version)\r\n\r\n    setAddress(pool.address)\r\n    setPoolinfo(res)\r\n\r\n  }, [pool])\r\n  const getLiquidity = useCallback(async () => {\r\n    setPoolinfo({})\r\n    let DeriNumber = await DeriforPairContract.balanceOf(PairAddress)\r\n    let EthNumber = await EthforPairContract.balanceOf(PairAddress)\r\n    let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\r\n    let resp = await fetch(deriPath);\r\n    let res = await resp.json();\r\n    let ethPath = \"https://sig.oraclum.io/unsigned?symbols=ETHUSD\"\r\n    let eresp = await axios.get(ethPath);\r\n    let ethPrice = eresp.data[\"ETHUSD\"]\r\n    let deriPrice = res.data.price;\r\n    let deriAmount = BigNumber.from(DeriNumber._hex).toString() / (10 ** 18);\r\n    let ethAmount = BigNumber.from(EthNumber._hex).toString() / (10 ** 18);\r\n    let deriValue = bg(deriAmount).times(deriPrice).toNumber();\r\n    let ethValue = bg(ethAmount).times(ethPrice).toNumber();\r\n    let liquidity = deriValue + ethValue\r\n    console.log(\"getLiquidity\", liquidity)\r\n    setPoolinfo({\r\n      liquidity: liquidity,\r\n    })\r\n  }, [DeriforPairContract, EthforPairContract])\r\n  const getVenusEarned = async () => {\r\n    if (pool && (pool.version === 'v3' || pool.version === 'v3_lite')) {\r\n      let res = await pool.getVenusEarned(wallet, pool.address)\r\n      setXvsNum(res)\r\n    }\r\n  }\r\n  const getIsStaked = useCallback(async () => {\r\n    let res = await pool.getIsStaked(wallet, pool)\r\n    if (res) {\r\n      setIsStaked(res.isStaked)\r\n      setAddress(res.poolAddress)\r\n    }\r\n  }, [wallet, pool])\r\n\r\n  const bTime = useCallback(async (id) => {\r\n    let res;\r\n    await setTimeout(async () => {\r\n      let provider = getProvider(42161);\r\n      let contract = await PoolContract.connect(provider)\r\n      console.log(\"bTime\", contract)\r\n      let data = defaultList.map(async (item) => {\r\n        let obj = {}\r\n        let res = await contract.getSecondsPerLiquidityInsideX128(item)\r\n        if (res) {\r\n          obj[\"id\"] = item\r\n          obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\r\n          obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\r\n        }\r\n        return obj\r\n      })\r\n      data = await Promise.all(data)\r\n      setBTimeRewardInfo(data)\r\n    }, 1000);\r\n    return res\r\n  }, [PoolContract])\r\n\r\n  const aTime = useCallback(async () => {\r\n    let data = defaultList.map(async (item) => {\r\n      let obj = {}\r\n      let res = await PoolContract.getSecondsPerLiquidityInsideX128(item)\r\n      if (res) {\r\n        obj[\"id\"] = item\r\n        obj[\"timestamp\"] = BigNumber.from(res.timestamp._hex).toString()\r\n        obj[\"secondsPerLiquidityInsideX128\"] = BigNumber.from(res.secondsPerLiquidityInsideX128._hex).toString()\r\n      }\r\n      console.log(\"aTime res\", res)\r\n      return obj\r\n    })\r\n    data = await Promise.all(data)\r\n    bTime()\r\n    setATimeRewardInfo(data)\r\n  }, [PoolContract])\r\n\r\n  const getBTokenValue = useCallback(async () => {\r\n    let data = defaultList.map(async (item) => {\r\n      let obj = {}\r\n      let res = await BTokenContract.positions(item)\r\n      obj = {\r\n        tickLower: res.tickLower,\r\n        tickUpper: res.tickUpper,\r\n        liquidity: BigNumber.from(res.liquidity._hex).toString()\r\n      }\r\n      return obj\r\n    })\r\n    data = await Promise.all(data)\r\n    let tickCurrent = await PairContract.slot0()\r\n    tickCurrent = tickCurrent.tick\r\n    let amount = data.map((item) => {\r\n      let [total_amount0, total_amount1] = getAmountETHAndDeri(tickCurrent, item.tickLower, item.tickUpper, item.liquidity)\r\n      return {\r\n        deri: total_amount0 / 10 ** 18,\r\n        eth: total_amount1 / 10 ** 18\r\n      }\r\n    })\r\n    let deriSum = amount.reduce((accumulator, currentValue) => {\r\n      return accumulator + currentValue.deri;\r\n    }, 0)\r\n    let ethSum = amount.reduce((accumulator, currentValue) => {\r\n      return accumulator + currentValue.eth;\r\n    }, 0)\r\n    let ethPath = \"https://sig.oraclum.io/unsigned?symbols=ETHUSD\"\r\n    let eresp = await axios.get(ethPath);\r\n    console.log(\"ETHUSD\", eresp.data)\r\n    let ethPrice = eresp.data[\"ETHUSD\"]\r\n    let ethValue = bg(ethSum).times(ethPrice).toNumber();\r\n    setAccountEthTokenValue(ethValue)\r\n    setAccountDeriToken(deriSum)\r\n  }, [BTokenContract, defaultList, PairContract])\r\n\r\n  const getApy = useCallback(async () => {\r\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\r\n      let deriPath = `${process.env.REACT_APP_INFO_HTTP_URL}/stats_for_token`\r\n      let resp = await fetch(deriPath);\r\n      let res = await resp.json();\r\n      let deriPrice = res.data.price;\r\n      let deriValue = bg(accountDeriToken).times(deriPrice).toNumber();\r\n      let sumValue = deriValue + accountEthTokenValue\r\n      let totalYearDeriValue = bg(totalYearDeri).times(deriPrice).toNumber();\r\n      let apy = (totalYearDeriValue / sumValue) * 100\r\n      setApy(apy)\r\n    }\r\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\r\n\r\n  const getTimeRewardInfo = useCallback(async () => {\r\n    console.log(\"getTimeRewardInfo\", aTimeRewardInfo, bTimeRewardInfo)\r\n    let rewards = bTimeRewardInfo.map(async (item) => {\r\n      let aTime = aTimeRewardInfo.find(id => id.id === item.id)\r\n      let secondsPerLiquidityInsideX128_a = aTime.secondsPerLiquidityInsideX128\r\n      let reward = await PoolContract.getRewardInBetween(item.id, item.timestamp, secondsPerLiquidityInsideX128_a, item.secondsPerLiquidityInsideX128)\r\n      if (reward) {\r\n        let obj = {\r\n          reward: BigNumber.from(reward._hex).toString() / 10 ** 18,\r\n          id: item.id,\r\n          timestamp: Math.abs(item.timestamp - aTime.timestamp)\r\n        }\r\n        return obj\r\n      }\r\n    })\r\n    rewards = await Promise.all(rewards)\r\n    console.log(\"getTimeRewardInfo\", rewards)\r\n    if (rewards[0].timestamp !== 0) {\r\n      const totalScore = rewards.reduce((accumulator, currentValue) => {\r\n        return accumulator + currentValue.reward;\r\n      }, 0);\r\n      const oneYear = 1000 * 60 * 60 * 24 * 365;\r\n      const valuePerYear = (totalScore / (rewards[0].timestamp * 1000)) * oneYear;\r\n      setTotalYearDeri(valuePerYear)\r\n    }\r\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\r\n  const onImgError = (event) => {\r\n    event.target.src = errorimg\r\n  }\r\n  const closeSymbol = (address) => {\r\n    sessionStorage.setItem(address, false)\r\n    setShow(false)\r\n  }\r\n  useEffect(() => {\r\n    if (pool.version === 'ulp' && DeriforPairContract) {\r\n      getLiquidity()\r\n    } else {\r\n      getPoolInfo()\r\n    }\r\n    if (wallet.isConnected()) {\r\n      getIsStaked()\r\n      getVenusEarned()\r\n    }\r\n  }, [pool, wallet.detail.account, DeriforPairContract, EthforPairContract])\r\n  useEffect(() => {\r\n    let sess = sessionStorage.getItem(pool.address)\r\n    if (sess !== null) {\r\n      if (sess) {\r\n        setShow(false)\r\n      }\r\n    }\r\n  }, [pool])\r\n  const networkLogo = (chainId) => {\r\n    let src;\r\n    if (chainId === \"56\" || chainId === \"97\") {\r\n      src = BSC\r\n    } else if (chainId === \"137\") {\r\n      src = POLYGON\r\n    } else if (chainId === \"1\") {\r\n      src = ETH\r\n    } else if (chainId === '42161' || chainId === '421611' || chainId === '421613') {\r\n      src = ARBITRUM\r\n    } else if (chainId === '324') {\r\n      src = ZKSYNC\r\n    }\r\n    return src\r\n  }\r\n  const staking = (url) => {\r\n    if (pool.version === 'v2_lite_open') {\r\n      return\r\n    }\r\n    history.push(url)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (pool.version === \"ulp\" && PoolContract) {\r\n      setATimeRewardInfo([])\r\n      setBTimeRewardInfo([])\r\n      setApy()\r\n      aTime()\r\n    }\r\n  }, [pool.version, PoolContract])\r\n  useEffect(() => {\r\n    if (pool.version === \"ulp\" && BTokenContract && PairContract) {\r\n      getBTokenValue()\r\n    }\r\n  }, [BTokenContract, pool.version, PairContract])\r\n\r\n  useEffect(() => {\r\n    if (totalYearDeri && accountDeriToken && accountEthTokenValue) {\r\n      getApy()\r\n    }\r\n  }, [totalYearDeri, accountDeriToken, accountEthTokenValue])\r\n\r\n  useEffect(() => {\r\n    if (aTimeRewardInfo.length && PoolContract && bTimeRewardInfo.length) {\r\n      getTimeRewardInfo()\r\n    }\r\n  }, [aTimeRewardInfo, bTimeRewardInfo, PoolContract])\r\n  const chainMap = {\r\n    \"BSC\": \"BNB Chain\",\r\n    \"ZKSYNC\": \"zkSync Era\"\r\n  }\r\n  const url = pool.version === 'ulp' ? `/lppool/${pool.chainId}/${pool.address}` : `/pool/${pool.version || 'v1'}/${pool.chainId}/${pool.type}/${pool.address}`\r\n  return (\r\n    <div className={`${pool.address === '0x243681B8Cd79E3823fF574e07B2378B8Ab292c1E' ? 'showGuide' : ''} card-box`}> \r\n      <div className={pool.version === 'v2_lite_open' ? 'card-list open-list' : 'card-list'} onClick={() => { staking(url) }} >\r\n        <div className={`card-header ${pool.retired ? `${pool.version}` : \"\"} ${pool.new ? \"new\" : ''}`}>\r\n          <div className='pool-network-type'>\r\n            <div className='network-logo'>\r\n              <img alt='' src={networkLogo(pool.chainId)} />\r\n            </div>\r\n            <div className='pool-type-network-text'>\r\n              <div className='pool-type-text'>\r\n                {pool.address !== '0xD2D950e338478eF7FeB092F840920B3482FcaC40' && <>\r\n                  {lang[pool.type]} {lang[pool.zone]}\r\n                </>}\r\n                {pool.address === \"0x1eF92eDA3CFeefb8Dae0DB4507f860d3b73f29BA\" && <>\r\n                  DERI-based\r\n                </>}\r\n                {pool.address === '0xD2D950e338478eF7FeB092F840920B3482FcaC40' && <>\r\n                  {lang[pool.zone]}\r\n                </>}\r\n              </div>\r\n              <div className='pool-network-text'>\r\n                {chainMap[pool.chain.toUpperCase()] ? chainMap[pool.chain.toUpperCase()] : pool.chain.toUpperCase()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='base-token-logo'>\r\n            {pool.isLp && <>\r\n              <div className='lp-base-token-bg'>\r\n                <div className={`base-token-bg ${pool.bTokens[0].bTokenSymbol}`}></div>\r\n                <span className='lp-con'>+</span>\r\n                <div className={`base-token-bg ${pool.bTokens[1].bTokenSymbol}`}></div>\r\n              </div>\r\n            </>}\r\n            {!pool.isLp && pool.version !== 'v3' && pool.version !== \"v3_lite\" && <>\r\n              {pool.bTokens.map((item, index) => <div key={index} className='base-token-box-bg no-animation-tokens'>\r\n                <div className={`base-token-bg ${item.bTokenSymbol}`}>\r\n                  {pool.version === 'v2_lite_open' && <>\r\n                    <img alt='' onError={onImgError} src={`https://raw.githubusercontent.com/deri-finance/deri-open-zone/main/img/${item.bTokenSymbol}.png`} />\r\n                  </>}\r\n                </div>\r\n              </div>)}\r\n            </>}\r\n            {(pool.version === \"v3\" || pool.version === \"v3_lite\") && (!pool.singleBtoken) &&\r\n              <TokenExplode bTokens={pool.bTokens} />\r\n            }\r\n            {\r\n              (pool.version === \"v3\" || pool.version === \"v3_lite\") && (pool.singleBtoken) &&\r\n              <div className='base-token-box-bg no-animation-tokens'>\r\n                <div className={`base-token-bg ${pool.bTokens[0].bTokenSymbol}`}>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className='card-content'>\r\n\r\n          <div className='max-apy'>\r\n            {pool.version !== 'v2_lite_open' && <>\r\n              <div className='max-apy-title'>\r\n                {(pool.version === 'v2' || pool.version === \"v3_lite\" || pool.version === \"v3\") ? lang['max-apy'] : lang['apy']}\r\n              </div>\r\n              <div className='max-apy-num'>\r\n                <DeriNumberFormat value={pool.version === \"ulp\" ? apy : poolInfo.apy} suffix='%' displayType='text' allowZero={true} decimalScale={2} />\r\n              </div>\r\n            </>}\r\n          </div>\r\n          <div className='total-pool-liquidity'>\r\n            <div className='total-liquidity-title'>\r\n              {lang['total-pool-liquidity']}\r\n            </div>\r\n            <div className='total-liquidity-num'>\r\n              <DeriNumberFormat value={poolInfo.liquidity} displayType='text' thousandSeparator={true} decimalScale={pool.type === 'lp' ? pool.version === \"ulp\" ? 0 : 7 : 0} />\r\n            </div>\r\n          </div>\r\n          <div className='your-deri-epoch'>\r\n            {isStaked && address === pool.address && <div className='staked-box'>\r\n              <img src={stakedLogo} alt='' />\r\n              {lang['staked']}\r\n            </div>}\r\n            {(+xvsNum > 0) && (pool.version === 'v3' || pool.version === 'v3_lite') && <span className='xvs-collectable'><div className='staked-box'><DeriNumberFormat width='50px' value={xvsNum} displayType='text' thousandSeparator={true} decimalScale={2} /> &nbsp; XVS  {lang['collectable']}</div></span>}\r\n          </div>\r\n          <div className='stake-button'>\r\n            <Button disabled={pool.version === 'v2_lite_open' ? true : false} className='button' outline label={pool.version === 'v2_lite_open' ? lang['operating'] : lang['stake']} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* {pool.version === \"v3_lite\" && show &&\r\n        <div className='new-symbol'>\r\n          <div className='new-symbol-text'>\r\n            New Listing : <a rel=\"noreferrer\" href='https://deri.io/#/trade/futures/FITFIUSDT' target=\"_blank\" >FITFIUSDT</a> <a href='https://deri.io/#/trade/futures/AVAXUSDT' rel=\"noreferrer\" target=\"_blank\">AVAXUSDT</a>\r\n          </div>\r\n          <div className='close-symbol'>\r\n            <img src={close} alt='close' onClick={() => closeSymbol(pool.address)} />\r\n          </div>\r\n        </div>\r\n      } */}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst TokenWrapper = styled.div`\r\n  @-webkit-keyframes explode {\r\n    0% {\r\n        transform: translateX(0px);\r\n        -moz-transform : translateX(0px);\r\n    }\r\n    100% {\r\n        transform: translateX(100px);\r\n        -moz-transform : translateX(100px);\r\n    }\r\n  }\r\n\r\n  @keyframes explode {\r\n    0% {\r\n        transform: translateX(0px);\r\n        -moz-transform : translateX(0px);\r\n    }\r\n    100% {\r\n        transform: translateX(100px) ;\r\n        -moz-transform : translateX(100px) ;\r\n    }\r\n  }\r\n  .base-token{\r\n    margin-left: 0px !important;\r\n    z-index : -2;\r\n    visibility: hidden;\r\n    background-color: #111e34;\r\n    border : 1px solid #fff;\r\n  }\r\n  @media only screen and (max-width: 760px) {\r\n    .base-token{\r\n      display:none;\r\n    }\r\n  }\r\n  .base-token-box-bg.explode:hover .move  {\r\n    -webkit-animation : explode .4s .0s linear;\r\n    -moz-animation :  explode .4s .0s linear;\r\n    animation: explode .4s .0s linear;\r\n    visibility: visible;    \r\n  }\r\n  \r\n  .base-token-box-bg.explode:hover .base-token {\r\n    z-index : 2 !important;\r\n  } \r\n\r\n`\r\nconst Token = styled.div`\r\n  position: absolute;\r\n  transform : ${props => `rotate(${-props.rotate}deg)`};\r\n  width: 48px;\r\n  height: 48px;\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  .move {\r\n    transform : translateX(100px) ${props => `rotate(${props.rotate}deg)`};\r\n  }\r\n`\r\n\r\nconst TokenExplode = ({ bTokens = [] }) => {\r\n  const angle = 360 / bTokens.length\r\n  return (\r\n    <TokenWrapper className='v3-tokens'>\r\n      <div className='tokens'>\r\n        {bTokens.filter((t, i) => i < 3).map((token, index) => (\r\n          <div className='base-token-box-bg' key={index}>\r\n            <div className={`base-token-bg ${token.bTokenSymbol}`}>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className='base-token-box-bg explode'>\r\n        <div className={'base-token-bg num-token'}>\r\n          {bTokens.length - 3} +\r\n        </div>\r\n        {bTokens.map((token, index) => {\r\n          const curRotate = angle * index\r\n          return (\r\n            <Token className='base-token' rotate={curRotate} width='100' key={index}>\r\n              <div width='100' rotate={curRotate} className={`base-token-bg move ${token.bTokenSymbol}`} >\r\n              </div>\r\n            </Token>\r\n          )\r\n        })}\r\n      </div>\r\n    </TokenWrapper>\r\n  )\r\n}"],"sourceRoot":""}
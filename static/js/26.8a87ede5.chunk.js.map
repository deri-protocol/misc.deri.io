{"version":3,"sources":["components/Input/Input.js","pages/Bridge/Spinner.js","pages/Bridge/img/stage-one.svg","pages/Bridge/img/stage-two.svg","pages/Bridge/img/stage-three.svg","pages/Bridge/img/succeed.svg","pages/Bridge/img/faild.svg","pages/Bridge/Operate.js","pages/Bridge/img/arrow-left.svg","pages/Bridge/img/disabled-down.svg","pages/Bridge/Bridge.js"],"names":["Wrapper","styled","div","props","inputWidth","inputHeight","unitPadding","Input","value","unit","unitTip","max","step","onChange","styles","disableNegtive","focus","placeholder","minTradeVolume","decimal","readOnly","className","disabled","onBlur","onFocus","inputRef","useRef","useEffect","current","setCustomValidity","style","type","title","onKeyPress","evt","which","preventDefault","isNaN","ref","e","regStr","reg","RegExp","target","bg","gt","integerValue","test","filter","substring","indexOf","tip","text","Spinner","class","Operate","lang","wallet","amount","balance","initialize","isClaim","setSending","sending","setAmount","setIsClaim","isWalletConnected","config","useConfig","alert","useAlert","history","useHistory","useState","isApprove","setIsApprove","isValid","setIsValid","isFaild","setIsFaild","bridgeState","setBridgeState","claimState","setClaimState","isClickClaim","setIsClickClaim","Button","PRIMARY","fontSize","label","actionElement","setActionElement","connect","valid","isConnected","apiProxy","request","detail","account","res","switchNetwork","toChainId","send","error","isFromConnected","isNetwork","from_chainId","netWork","stageOne","chainId","to_chainId","includeResponse","success","stageTwo","window","setInterval","claim","isToConnected","reset","push","approve","loadApprove","result","isUnlocked","stageThree","element","onClick","alt","src","succeed","toLowerCase","from_network","to_network","FaildLogo","obj","img","ETH","BSC","HECO","inject","observer","setBalance","isdev","DeriEnv","get","netWork_text","id","fromList","setFromList","toList","setToList","setInitialize","dropdownList_from","setDropdownList_from","dropdownList_to","setDropdownList_to","From_img","setFrom_img","To_img","setTo_img","selectListClassFrom","classNames","selectListClassTo","setIsWalletConnected","getValid","fromChainId","toString","getBalance","to_arr","from_one","p","from_two","from_three","disabledDown","up","down","map","item","index","Init","JSON","parse","stringify","select_from","arrow","select_to","deriLogo","DeriNumberFormat","decimalScale","thousandSeparator","rel","href"],"mappings":"mNAKMA,EAAUC,IAAOC,IAAV,8bAYD,SAAAC,GAAK,OAAIA,EAAMC,UAAV,IACL,SAAAD,GAAK,OAAIA,EAAME,WAAV,IASC,SAAAF,GAAK,OAAIA,EAAMG,WAAV,IAGR,SAASC,EAAT,GAAwP,IAAxOC,EAAuO,EAAvOA,MAAMC,EAAiO,EAAjOA,KAAKC,EAA4N,EAA5NA,QAAQC,EAAoN,EAApNA,IAAIC,EAAgN,EAAhNA,KAAKC,EAA2M,EAA3MA,SAA2M,IAAlMC,cAAkM,MAAzL,CAAC,EAAwL,MAAtLC,sBAAsL,SAA/JC,EAA+J,EAA/JA,MAA+J,IAAzJC,mBAAyJ,MAA7I,GAA6I,MAA1IX,mBAA0I,MAA5H,OAA4H,EAArHY,EAAqH,EAArHA,eAAqH,IAAtGC,eAAsG,MAA5F,EAA4F,EAA1FC,EAA0F,EAA1FA,SAA0F,IAAjFhB,kBAAiF,MAApE,MAAoE,MAA9DC,mBAA8D,MAAlD,OAAkD,EAA3CgB,EAA2C,EAA3CA,UAA2C,IAAjCC,gBAAiC,SAAhBC,EAAgB,EAAhBA,OAAOC,EAAS,EAATA,QACrPC,EAAWC,iBAAO,MA0CxB,OARAC,qBAAU,WACRF,EAASG,QAAQC,kBAAkB,IAChCJ,EAASG,SAAWZ,GACrBS,EAASG,QAAQZ,OAEpB,GAAC,CAACA,IAID,eAAChB,EAAD,CAAUM,YAAaA,EAAaF,WAAYA,EAAYC,YAAaA,EAAagB,UAAWA,EAAWS,MAAK,eAAMhB,GAAvH,UACE,uBAAOG,YAAaA,EAAac,KAAK,SAASC,MAAM,GAAGC,WAhBzC,SAAAC,GACC,KAAdA,EAAIC,OAA8B,IAAdD,EAAIC,OAA6B,IAAdD,EAAIC,QAAgBD,EAAIC,MAAQ,IAAMD,EAAIC,MAAQ,KACzFD,EAAIE,gBAET,EAYmFb,OAAQA,EAAQC,QAASA,EAASF,SAAYA,EAAUd,MAAOA,EAAOI,KAAQyB,MAAMzB,GAAQ,EAAIA,EAAM0B,IAAKb,EAAUZ,SA3C1L,SAAA0B,GACb,IAAMC,EAAM,uBAAmBrB,EAAnB,MACNsB,EAAM,IAAIC,OAAOF,GACfhC,EAAU+B,EAAEI,OAAZnC,MACR,GAAGG,GAAOiC,aAAGpC,GAAOqC,GAAGlC,GACrBE,GAAYA,EAASF,QAChB,GAAGI,IAAmBP,EAAQ,GAAK6B,MAAM7B,IAC9CK,GAAYA,EAAS,SAChB,GAAGL,EAAM,CACd,GAAGU,GAAkB,EACnB,GAAGV,EAAQU,GAAiB,EAC1BL,GAAYA,EAAS+B,aAAGpC,GAAON,IAAIgB,GAAgB4B,eAAiB5B,QAGpEL,GAAYA,EADOL,EAAQU,QAGxB,GAAG,QAAQ6B,KAAKvC,KAAWiC,EAAIM,KAAKvC,GAAO,CAChD,IAAMwC,EAASxC,EAAMyC,UAAU,EAAEzC,EAAM0C,QAAQ,KAAO,EAAI/B,GAC1DN,GAAYA,EAASmC,EACtB,MACCnC,GAAYA,EAASL,EAExB,MACCK,GAAYA,EAASL,EAExB,EAkB0NY,SAAUA,IACjO,qBAAKC,UAAU,OAAf,SAAuBX,EAAU,cAAC,IAAD,CAAeyC,IAAKzC,EAAS0C,KAAM3C,IAAUA,MAGnF,C,gNC9Ec,SAAS4C,IACtB,OACE,qBAAKC,MAAM,mBAAX,SACE,qBAAKA,MAAM,YAIhB,C,+BCRc,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,wC,QCA1B,MAA0B,oCCA1B,MAA0B,kCCgB1B,SAASC,EAAT,GAAyI,IAAtHC,EAAqH,EAArHA,KAAMC,EAA+G,EAA/GA,OAAQC,EAAuG,EAAvGA,OAAQC,EAA+F,EAA/FA,QAASC,EAAsF,EAAtFA,WAAYC,EAA0E,EAA1EA,QAASC,EAAiE,EAAjEA,WAAYC,EAAqD,EAArDA,QAASC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,kBAC1HC,EAASC,cACTC,EAAQC,cACRC,EAAUC,cAChB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA6BJ,oBAAS,GAAtC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAsCN,mBAAS,CAAC,GAAhD,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAoCR,mBAAS,CAAC,GAA9C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAAwCV,oBAAS,GAAjD,oBAAOW,GAAP,MAAqBC,GAArB,MACA,GAA0CZ,mBAAS,cAACa,EAAA,EAAD,CAAQvD,KAAMwD,IAASlE,UAAU,gBAAgBmE,SAAS,KAAKC,MAAOjC,EAAI,WAA7H,qBAAOkC,GAAP,MAAsBC,GAAtB,MACMC,GAAU,WACdnC,EAAOmC,SACR,EACKC,GAAK,iDAAG,kGACRpC,EAAOqC,cADC,gCAEMC,IAASC,QAAQ,2BAA4B,CAACvC,EAAOwC,OAAOC,UAFlE,QAENC,EAFM,QAGFN,QACNpC,EAAO2C,cAAcjC,EAAOgC,EAAIE,YAChCpC,GAAW,IAGbY,EAAWsB,EAAIN,OARL,2CAAH,qDAWLS,GAAI,iDAAG,2FACI,KAAX5C,GAA4B,IAAXA,EADV,uBAETW,EAAMkC,MAAM/C,EAAK,qCAFR,gCAKNE,EAASC,GALH,uBAMTU,EAAMkC,MAAM/C,EAAK,+BANR,6BASNU,EAAkBsC,gBATZ,uBAUTnC,EAAMkC,MAAN,UAAe/C,EAAK,qBAApB,YAA4CiD,EAAU7C,EAAW8C,aAAclD,GAAMmD,QAArF,YAAgGnD,EAAK,uBAV5F,iCAaXM,GAAW,GACXiB,GAAW,GACXE,EAAe,CACb2B,UAAU,IAhBD,UAkBKb,IAASC,QAAQ,SAAU,CAACvC,EAAOwC,OAAOY,QAASpD,EAAOwC,OAAOC,QAAStC,EAAWkD,WAAYpD,GAAS,CAAEqD,iBAAiB,IAlBlI,eAmBHC,SACNrB,GAAiB,cAACL,EAAA,EAAD,CAAQvD,KAAMwD,IAASlE,UAAU,gBAAgBoE,MAAOjC,EAAI,cAC7EyB,EAAe,CACb2B,UAAU,EACVK,UAAU,IAEZC,OAAOC,aAAY,WACjBtB,IACD,GAAE,OAEHd,GAAW,GACXjB,GAAW,IA9BF,4CAAH,qDAiCJsD,GAAK,iDAAG,2FACPlD,EAAkBmD,cADX,uBAEVhD,EAAMkC,MAAN,UAAe/C,EAAK,qBAApB,YAA4CiD,EAAU7C,EAAWkD,WAAYtD,GAAMmD,QAAnF,YAA8FnD,EAAK,uBAFzF,iCAKZ6B,IAAgB,GAChBN,GAAW,GACXI,EAAc,CACZyB,UAAU,IARA,SAUIb,IAASC,QAAQ,WAAY,CAACvC,EAAOwC,OAAOY,QAASpD,EAAOwC,OAAOC,SAAU,CAAEa,iBAAiB,IAVpG,cAWJC,SACN7B,EAAc,CACZyB,UAAU,EACVK,UAAU,IAEZtB,GAAiB,cAACL,EAAA,EAAD,CAAQvD,KAAMwD,IAASlE,UAAU,gBAAgBoE,MAAOjC,EAAI,cAC7E0D,OAAOC,aAAY,WACjBtB,IACD,GAAE,OAEHR,IAAgB,GAChBN,GAAW,IAtBD,4CAAH,qDAyBLuC,GAAQ,WACZ/C,EAAQgD,KAAK,UACd,EACKC,GAAO,iDAAG,wGACIzB,IAASC,QAAQ,aAAc,CAACvC,EAAOwC,OAAOY,QAASpD,EAAOwC,OAAOC,SAAU,CAAEa,iBAAiB,IADtG,cAENC,SACNrC,GAAa,GACb8C,OAEA9C,GAAa,GACbN,EAAMkC,MAAM/C,EAAK,mBAPL,2CAAH,qDAUPiE,GAAW,iDAAG,kGACdhE,EAAOqC,cADO,gCAEKC,IAASC,QAAQ,iBAAkB,CAACvC,EAAOwC,OAAOY,QAASpD,EAAOwC,OAAOC,UAF9E,OAEVwB,EAFU,OAGhB/C,EAAa+C,EAAOC,YAHJ,2CAAH,qDA+CjB,OAzCAhG,qBAAU,WACJ8B,EAAOqC,gBACT2B,KACA5B,KAEH,GAAE,CAACpC,EAAOwC,OAAQrC,IACnBjC,qBAAU,WACJiD,EACFK,EAAe,CACb2B,UAAU,EACVK,UAAU,EACVW,YAAY,IAELxC,KACTD,EAAc,CACZyB,UAAU,EACVK,UAAU,EACVW,YAAY,IAEd9D,GAAW,GACXE,EAAU,IAGb,GAAE,CAACY,EAAShB,IACbjC,qBAAU,WACR,IAAIkG,EAGAA,EAFApE,EAAOqC,cACLlB,EACQ,cAACU,EAAA,EAAD,CAAQvD,KAAMwD,IAASlE,UAAU,gBAAgBoE,MAAOjC,EAAI,MAAWsE,QAASV,KAChF1C,EAEFU,GACE,yBAAQ/D,UAAU,WAAWyG,QAASR,GAAtC,cAA8C,qBAAKS,IAAI,GAAGC,IAAKC,IAA/D,IAA2EzE,EAAI,SAA/E,OAEA,cAAC8B,EAAA,EAAD,CAAQvD,KAAMwD,IAASlE,UAAU,gBAAgBoE,MAAOjC,EAAI,KAAUsE,QAASxB,KAJ/E,cAAChB,EAAA,EAAD,CAAQvD,KAAMwD,IAASlE,UAAU,gBAAgBoE,MAAOjC,EAAI,QAAasE,QAASN,KAOpF,cAAClC,EAAA,EAAD,CAAQvD,KAAMwD,IAASlE,UAAU,gBAAgBoE,MAAOjC,EAAK,kBAAmBsE,QAASlC,KAErGD,GAAiBkC,EAClB,GAAE,CAACjD,EAASnB,EAAOwC,OAAQvB,EAAWhB,EAAQE,EAAYM,EAAkBkB,KAE3E,sBAAK/D,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACGmC,EAAI,OADP,IACoBE,EADpB,UACmCF,EAAI,KAAS0E,cADhD,IACgEtE,EAAWuE,aAD3E,IAC0F3E,EAAI,GAAO0E,cADrG,IACqHtE,EAAWwE,cAEhI,qBAAK/G,UAAU,MAAf,SACGqE,KAEH,sBAAKrE,UAAU,OAAf,WACIwC,GAAW,sBAAKxC,UAAU,UAAf,UACX,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAK0G,IAAI,GAAGC,IAAKpB,OAC7C,sBAAKvF,UAAU,aAAf,UAA6BmC,EAAK,4BAAlC,UAEF,sBAAKnC,UAAU,aAAf,UACG0C,GAAW,mCACTiB,EAAY4B,SAAW,qBAAKvF,UAAU,UAAf,SACtB,qBAAK0G,IAAI,GAAGC,IAAKC,MACV,qBAAK5G,UAAU,UAAf,SACL,cAACgC,EAAD,SAGJU,IAAYe,GAAW,qBAAKzD,UAAU,UACvCyD,GAAW,8BAAK,qBAAKkD,IAAKK,EAAWN,IAAI,aAG9C,sBAAK1G,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAK0G,IAAI,GAAGC,IAAKf,OAC7C,qBAAK5F,UAAU,aAAf,SAA6BmC,EAAK,mCAEpC,sBAAKnC,UAAU,aAAf,UACG0C,GAAW,mCACTiB,EAAY4B,UAAY,mCACtB5B,EAAYiC,SAAW,qBAAK5F,UAAU,UAAf,SACtB,qBAAK0G,IAAI,GAAGC,IAAKC,MACV,qBAAK5G,UAAU,UAAf,SACL,cAACgC,EAAD,YAILU,IAAYiB,EAAY4B,WAAa,qBAAKvF,UAAU,gBAG3D,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAK0G,IAAI,GAAGC,IAAKJ,OAC7C,qBAAKvG,UAAU,aAAf,SAA6BmC,EAAK,sBAEpC,sBAAKnC,UAAU,aAAf,UACG0C,GAAW,mCACTiB,EAAY4B,UAAY5B,EAAYiC,UAAY,mCAC9CjC,EAAY4C,WAAa,qBAAKvG,UAAU,UAAf,SACxB,qBAAK0G,IAAI,GAAGC,IAAKC,MACV,qBAAK5G,UAAU,UAAf,SACL,cAACgC,EAAD,YAKLU,IAAYiB,EAAYiC,WAAa,qBAAK5F,UAAU,mBAI5DwC,GAAW,sBAAKxC,UAAU,WAAf,UACV,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAK0G,IAAI,GAAGC,IAAKpB,OAC7C,qBAAKvF,UAAU,aAAf,SAA6BmC,EAAK,uBAEpC,sBAAKnC,UAAU,aAAf,UACG+D,IAAgB,mCACdF,EAAW0B,SAAW,qBAAKvF,UAAU,UAAf,SACrB,qBAAK0G,IAAI,GAAGC,IAAKC,MACV,qBAAK5G,UAAU,UAAf,SACL,cAACgC,EAAD,SAGJ+B,KAAiBN,GAAW,qBAAKzD,UAAU,UAC5CyD,GAAW,8BAAK,qBAAKkD,IAAKK,EAAWN,IAAI,aAG9C,sBAAK1G,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAK0G,IAAI,GAAGC,IAAKf,OAC7C,sBAAK5F,UAAU,aAAf,UAA6BmC,EAAK,8BAAlC,UAEF,sBAAKnC,UAAU,aAAf,UACG+D,IAAgB,mCACdF,EAAW0B,UAAY,mCACrB1B,EAAW+B,SAAW,qBAAK5F,UAAU,UAAf,SACrB,qBAAK0G,IAAI,GAAGC,IAAKC,MACV,qBAAK5G,UAAU,UAAf,SACL,cAACgC,EAAD,YAIL+B,KAAiBF,EAAW0B,WAAa,qBAAKvF,UAAU,gBAG/D,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,cAA4B,qBAAK0G,IAAI,GAAGC,IAAKJ,OAC7C,qBAAKvG,UAAU,aAAf,SAA6BmC,EAAI,cAEnC,sBAAKnC,UAAU,aAAf,UACG+D,IAAgB,mCACdF,EAAW0B,UAAY1B,EAAW+B,UAAY,mCAC5C/B,EAAW0C,WAAa,qBAAKvG,UAAU,UAAf,SACvB,qBAAK0G,IAAI,GAAGC,IAAKC,MACV,qBAAK5G,UAAU,UAAf,SACL,cAACgC,EAAD,YAKL+B,KAAiBF,EAAW+B,WAAa,qBAAK5F,UAAU,wBAOxE,CACD,SAASoF,EAAUI,EAASrD,GAE1B,IAAI8E,EAAM,CAAC,EACX,OAFAzB,GAAWA,GAGT,KAAK,EACHyB,EAAI3B,QAAUnD,EAAI,SAClB8E,EAAIzB,QAAU,EACdyB,EAAIC,IAAMC,UACV,MACF,KAAK,GACHF,EAAI3B,QAAUnD,EAAI,IAClB8E,EAAIzB,QAAU,GACdyB,EAAIC,IAAME,UACV,MACF,KAAK,IACHH,EAAI3B,QAAUnD,EAAI,KAClB8E,EAAIzB,QAAU,IACdyB,EAAIC,IAAMG,UACV,MACF,KAAK,GACHJ,EAAI3B,QAAUnD,EAAK,eACnB8E,EAAIzB,QAAU,GACdyB,EAAIC,IAAME,UACV,MACF,KAAK,EACHH,EAAI3B,QAAUnD,EAAI,QAClB8E,EAAIzB,QAAU,EACdyB,EAAIC,IAAMC,UACV,MACF,KAAK,IACHF,EAAI3B,QAAUnD,EAAK,gBACnB8E,EAAIzB,QAAU,IACdyB,EAAIC,IAAMG,UAKd,OAAOJ,CACR,C,aClUc,MAA0B,uCCA1B,MAA0B,0C,6DC+TzC,SAAS7B,EAAUI,EAASrD,GAE1B,IAAI8E,EAAM,CAAC,EACX,OAFAzB,GAAWA,GAGT,KAAK,EACHyB,EAAI3B,QAAUnD,EAAI,SAClB8E,EAAIzB,QAAU,EACdyB,EAAIC,IAAMC,UACV,MACF,KAAK,GACHF,EAAI3B,QAAUnD,EAAI,IAClB8E,EAAIzB,QAAU,GACdyB,EAAIC,IAAME,UACV,MACF,KAAK,IACHH,EAAI3B,QAAUnD,EAAI,KAClB8E,EAAIzB,QAAU,IACdyB,EAAIC,IAAMG,UACV,MACF,KAAK,GACHJ,EAAI3B,QAAUnD,EAAK,eACnB8E,EAAIzB,QAAU,GACdyB,EAAIC,IAAME,UACV,MACF,KAAK,EACHH,EAAI3B,QAAUnD,EAAI,QAClB8E,EAAIzB,QAAU,EACdyB,EAAIC,IAAMC,UACV,MACF,KAAK,IACHF,EAAI3B,QAAUnD,EAAK,gBACnB8E,EAAIzB,QAAU,IACdyB,EAAIC,IAAMG,UAKd,OAAOJ,CACR,CACcK,sBAAO,SAAPA,CAAiBC,aArVhC,YAAmC,IAAjBnF,EAAgB,EAAhBA,OAAQD,EAAQ,EAARA,KACxB,EAA4BiB,mBAAS,IAArC,mBAAOf,EAAP,KAAeM,EAAf,KACA,EAA8BS,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBkF,EAAhB,KACMC,EAA0B,SAAlBC,UAAQC,MAChBC,EAAeH,EACnB,CACE,CACE1F,KAAMI,EAAI,QACV0F,GAAI,EACJX,IAAKC,WAEP,CACEpF,KAAMI,EAAK,eACX0F,GAAI,GACJX,IAAKE,WAEP,CACErF,KAAMI,EAAK,gBACX0F,GAAI,IACJX,IAAKG,YAGP,CAEA,CACEtF,KAAMI,EAAI,SACV0F,GAAI,EACJX,IAAKC,WAEP,CACEpF,KAAMI,EAAI,IACV0F,GAAI,GACJX,IAAKE,WAEP,CACErF,KAAMI,EAAI,KACV0F,GAAI,IACJX,IAAKG,YAKX,EAAgCjE,mBAASwE,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAA4B3E,mBAASwE,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAA8B7E,oBAAS,GAAvC,mBAAOV,EAAP,KAAgBD,EAAhB,KACA,EAAoCW,mBAASqE,EAC3C,CACEpC,aAAc,GACdyB,aAAc3E,EAAK,eACnBsD,WAAY,EACZsB,WAAY5E,EAAI,SACd,CACFkD,aAAc,EACdyB,aAAc3E,EAAI,SAClBsD,WAAY,GACZsB,WAAY5E,EAAI,MAVpB,mBAAOI,EAAP,KAAmB2F,EAAnB,KAYA,EAA8B9E,oBAAS,GAAvC,mBAAOZ,EAAP,KAAgBI,EAAhB,KACA,EAAkDQ,oBAAS,GAA3D,oBAAO+E,GAAP,MAA0BC,GAA1B,MACA,GAA8ChF,oBAAS,GAAvD,qBAAOiF,GAAP,MAAwBC,GAAxB,MACA,GAAgClF,mBAASgC,EAAU7C,EAAW8C,aAAclD,GAAM+E,KAAlF,qBAAOqB,GAAP,MAAiBC,GAAjB,MACA,GAA4BpF,mBAASgC,EAAU7C,EAAWkD,WAAYtD,GAAM+E,KAA5E,qBAAOuB,GAAP,MAAeC,GAAf,MACMC,GAAsBC,IAAW,oBAAqB,CAAE,KAAQT,KAChEU,GAAoBD,IAAW,kBAAmB,CAAE,KAAQP,KAClE,GAAkDjF,mBAChD,CACE+B,iBAAiB,EACjBa,eAAe,IAHnB,qBAAOnD,GAAP,MAA0BiG,GAA1B,MA6BMC,GAAQ,iDAAG,kGACX3G,EAAOqC,cADI,gCAEGC,IAASC,QAAQ,2BAA4B,CAACvC,EAAOwC,OAAOC,UAF/D,QAETC,EAFS,QAGLN,QACN0D,EAAc,CACZ7C,aAAcP,EAAIkE,YAClBlC,aAAc1B,EAAUN,EAAIkE,YAAa7G,GAAMmD,QAC/CG,WAAYX,EAAIE,UAChB+B,WAAY3B,EAAUN,EAAIE,UAAW7C,GAAMmD,UAE7CkD,GAAYpD,EAAUN,EAAIkE,YAAa7G,GAAM+E,KAC7CwB,GAAUtD,EAAUN,EAAIE,UAAW7C,GAAM+E,KACzCvE,EAAUpB,aAAGuD,EAAIzC,QAAS,IAAI4G,YAC9BxG,EAAWqC,EAAIN,QAbJ,2CAAH,qDAkBR0E,GAAU,iDAAG,kGACb9G,EAAOqC,cADM,gCAECC,IAASC,QAAQ,iBAAkB,CAACvC,EAAOwC,OAAOY,QAASpD,EAAOwC,OAAOC,UAF1E,OAEXC,EAFW,OAGf0C,EAAW1C,GAHI,2CAAH,qDAoEhB,OA7DAxE,qBAAU,WACR4I,IACD,GAAE,CAAC9G,EAAOwC,OAAQrC,IAEnBjC,qBAAU,WACRyI,IACD,GAAE,CAAC3G,EAAOwC,SAgCXtE,qBAAU,WACR,IACI6I,EACAC,EAAWxB,EAAajG,QAAO,SAAA0H,GAAC,OAAIA,EAAExB,MAAQtF,EAAW8C,YAAzB,IAAuC,GACvEiE,EAAW1B,EAAajG,QAAO,SAAA0H,GAAC,OAAIA,EAAExB,MAAQtF,EAAW8C,YAAzB,IAAuC,GACvEkE,EAAa3B,EAAajG,QAAO,SAAA0H,GAAC,OAAIA,EAAExB,MAAQtF,EAAW8C,YAAzB,IAAuC,GAK7E8D,EAAS,CAJIvB,EAAajG,QAAO,SAAA0H,GAAC,OAAIA,EAAExB,MAAQtF,EAAWkD,UAAzB,IAAqC,GAC1DmC,EAAajG,QAAO,SAAA0H,GAAC,OAAIA,EAAExB,MAAQtF,EAAWkD,UAAzB,IAAqC,GACxDmC,EAAajG,QAAO,SAAA0H,GAAC,OAAIA,EAAExB,MAAQtF,EAAWkD,UAAzB,IAAqC,IAGzEsC,EAFW,CAACqB,EAAUE,EAAUC,IAGhCtB,EAAUkB,GACVX,GAAYpD,EAAU7C,EAAW8C,aAAclD,GAAM+E,KACrDwB,GAAUtD,EAAU7C,EAAWkD,WAAYtD,GAAM+E,KApG/B,WAClB,IAAI/B,IAAkB/C,EAAOqC,gBAAkBrC,EAAOwC,OAAOY,WAAajD,EAAW8C,aACjFW,IAAgB5D,EAAOqC,gBAAkBrC,EAAOwC,OAAOY,WAAajD,EAAWkD,WAKnFqD,GAJU,CACR3D,gBAAiBA,EACjBa,cAAeA,GAGlB,CA6FCvB,EAED,GAAE,CAAClC,EAAYH,EAAOwC,SAOrB,qBAAK5E,UAAU,iBAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACGmC,EAAI,SAEP,qBAAKnC,UAAU,aAAf,SACGmC,EAAK,mBAGV,sBAAKnC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,uBAAf,SACGmC,EAAK,qBAER,sBAAKnC,UAAU,yBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SACGmC,EAAI,OAEP,sBAAKnC,UAAU,qBAAf,UACE,sBAAKA,UAAW0C,EAAU,qBAAuB,OAAQ+D,QAAS,WAxH5E/D,GAGJ0F,IAAsBD,GAqHkF,EAA1F,UACE,sBAAKnI,UAAU,yBAAf,UACE,qBAAK2G,IAAK4B,GAAU7B,IAAI,KACxB,+BAAOnE,EAAWuE,eAClB,qBAAK9G,UAAWwC,EAAU,iBAAoBK,GAAkBsC,gBAAmC,YAAjB,eAAlF,UACK3C,GAAWK,GAAkBsC,gBAAmBhD,EAAI,UAAgBA,EAAI,iBAG/E,qBAAKnC,UAAU,YAAY2G,IAAKjE,EAAU8G,EAAerB,GAAoBsB,UAAKC,UAAMhD,IAAI,QAE9F,oBAAI1G,UAAW2I,GAAf,SACGb,EAAS6B,KAAI,SAACC,EAAMC,GACnB,OACE,mCACGtH,EAAWuE,eAAiB8C,EAAK7H,KAAO,oBAAgB/B,UAAU,YAAYyG,QAAS,kBAzF5F,SAAAQ,GAClB,IAAI6C,EAAOC,KAAKC,MAAMD,KAAKE,UAAU1H,IACjCuH,EAAKrE,aAAewB,EAAIY,IAC1BiC,EAAKzE,aAAe9C,EAAWkD,WAC/BqE,EAAKhD,aAAevE,EAAWwE,WAC/B+C,EAAKrE,WAAalD,EAAW8C,aAC7ByE,EAAK/C,WAAaxE,EAAWuE,eAE7BgD,EAAKzE,aAAe4B,EAAIY,GACxBiC,EAAKhD,aAAeG,EAAIlF,MAE1BmG,EAAc4B,GACd1B,IAAsBD,GACvB,CA4EqH+B,CAAYN,EAAlB,EAA/C,SACvC,sBAAK5J,UAAU,kBAAf,UACE,qBAAK0G,IAAI,GAAGC,IAAKiD,EAAK1C,MADxB,IACgC,qCAAQ0C,EAAK7H,KAAb,WAFgB8H,GAI1C,IAGb,YAIP,qBAAK7J,UAAU,QAAf,SACE,qBAAK2G,IAAKwD,EAAOzD,IAAI,OAEvB,sBAAK1G,UAAU,aAAf,UACE,qBAAKA,UAAU,WAAf,SACGmC,EAAI,KAEP,sBAAKnC,UAAU,mBAAf,UACE,sBAAKA,UAAW0C,EAAU,qBAAuB,OAAQ+D,QAAS,WAnJ5E/D,GAGJ4F,IAAoBD,GAgJkF,EAAxF,UACE,sBAAKrI,UAAU,yBAAf,UACE,qBAAK2G,IAAK8B,GAAQ/B,IAAI,KACtB,+BAAOnE,EAAWwE,aAClB,qBAAK/G,UAAYwC,EAA8BK,GAAkBmD,cAAiC,YAAjB,eAAtD,iBAA3B,SACIxD,GAAWK,GAAkBmD,cAAiB7D,EAAI,UAAgBA,EAAI,iBAG5E,qBAAKnC,UAAU,YAAY2G,IAAKjE,EAAU8G,EAAenB,GAAkBoB,UAAKC,UAAMhD,IAAI,QAE5F,oBAAI1G,UAAW6I,GAAf,SACGb,EAAO2B,KAAI,SAACC,EAAMC,GACjB,OACE,mCACGtH,EAAWwE,aAAe6C,EAAK7H,KAAO,oBAAgB/B,UAAU,YAAYyG,QAAS,kBA5G5F,SAAAQ,GAChB,IAAI6C,EAAOC,KAAKC,MAAMD,KAAKE,UAAU1H,IACjCuH,EAAKzE,eAAiB4B,EAAIY,IAC5BiC,EAAKzE,aAAe9C,EAAWkD,WAC/BqE,EAAKhD,aAAevE,EAAWwE,WAC/B+C,EAAKrE,WAAalD,EAAW8C,aAC7ByE,EAAK/C,WAAaxE,EAAWuE,eAE7BgD,EAAKrE,WAAawB,EAAIY,GACtBiC,EAAK/C,WAAaE,EAAIlF,MAExBmG,EAAc4B,GACdxB,IAAoBD,GAErB,CA8FmH+B,CAAUR,EAAhB,EAA/C,SACrC,sBAAK5J,UAAU,kBAAf,UACE,qBAAK0G,IAAI,GAAGC,IAAKiD,EAAK1C,MADxB,IACgC,qCAAQ0C,EAAK7H,KAAb,WAFc8H,GAIxC,IAGb,kBAMX,sBAAK7J,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACGmC,EAAK,gBAER,sBAAKnC,UAAU,iBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,cAACd,EAAA,EAAD,CAAOU,YAAY,IAAIT,MAAOkD,EAAQ7C,SA5FlC,SAACL,GACjBwD,EAAUxD,EACX,EA0FwEW,QAAS,GAAIG,SAAUyC,EAAS1C,UAAU,cACrG,iCAAM,qBAAK0G,IAAI,GAAGC,IAAK0D,UAAUrK,UAAU,eAA3C,cAEF,sBAAKA,UAAU,aAAf,UACGmC,EAAK,gBADR,IACyB,cAACmI,EAAA,EAAD,CAAkBnL,MAAOmD,EAASiI,aAAc,EAAGC,mBAAmB,IAD/F,iBAKJ,qBAAKxK,UAAU,sBAAf,SACE,cAACkC,EAAD,CAASC,KAAMA,EAAMO,QAASA,EAASN,OAAQA,EAAQE,QAASA,EAASO,kBAAmBA,GAAmBR,OAAQA,EAAQG,QAASA,EAASD,WAAYA,EAAYK,WAAYA,EAAYH,WAAYA,EAAYE,UAAWA,MAEtO,qBAAK3C,UAAU,oBAAf,SACE,gCACE,sBAAKA,UAAU,0BAAf,UACGmC,EAAK,qBACN,sBAAMnC,UAAU,gBAAhB,SACE,mBAAGyK,IAAI,aAAanJ,OAAO,SAASoJ,KAAK,8BAAzC,yBAHJ,KAKE,sBAAM1K,UAAU,gBAAhB,SACE,mBAAGyK,IAAI,aAAanJ,OAAO,SAASoJ,KAAK,sCAAzC,wBANJ,KAQE,sBAAM1K,UAAU,gBAAhB,SACE,mBAAGyK,IAAI,aAAanJ,OAAO,SAASoJ,KAAK,4BAAzC,8BAGJ,qBAAK1K,UAAU,wBAAf,SACGmC,EAAK,uCAQrB,I","file":"static/js/26.8a87ede5.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { bg } from '../../lib/web3js';\r\nimport UnderlineText from '../UnderlineText/UnderlineText';\r\n\r\nconst Wrapper = styled.div`\r\ndisplay : flex;\r\nfont-size : 14px;\r\nalign-items : center;\r\nbackground: rgba(85, 119, 253, 0.1);\r\nborder-radius: 4px;\r\njustify-content: space-between;\r\ninput {\r\n  background: transparent;\r\n  border-radius: 4px;\r\n  // min-width: 240px;\r\n  border: 0;\r\n  width : ${props => props.inputWidth};\r\n  height: ${props => props.inputHeight};\r\n  color : #E0ECFF;\r\n  font-size : 18px;\r\n  padding-left: 16px;\r\n}\r\ninput:focus {\r\n  outline: none;\r\n}\r\n.unit {\r\n  margin-right: ${props => props.unitPadding};\r\n}\r\n`\r\nexport default function Input({value,unit,unitTip,max,step,onChange,styles = {},disableNegtive = true ,focus,placeholder='',unitPadding = '24px',minTradeVolume,decimal = 2,readOnly,inputWidth = '50%',inputHeight='56px',className,disabled = false,onBlur,onFocus}){\r\n  const inputRef = useRef(null);\r\n  const change = e => {\r\n    const regStr = `\\\\d+\\\\.\\\\d{0,${decimal}}$`\r\n    const reg = new RegExp(regStr)\r\n    const { value } = e.target\r\n    if(max && bg(value).gt(max)){    \r\n      onChange && onChange(max)\r\n    } else if(disableNegtive && (value < 0 || isNaN(value))) {\r\n      onChange && onChange('')\r\n    } else if(value){\r\n      if(minTradeVolume >= 1) {\r\n        if(value / minTradeVolume >=1) {\r\n          onChange && onChange(bg(value).div(minTradeVolume).integerValue() * minTradeVolume) \r\n        } else {\r\n          const validValue = value * minTradeVolume\r\n          onChange && onChange(validValue) \r\n        }\r\n      } else if(/\\d+\\./.test(value) && !reg.test(value)){\r\n        const filter = value.substring(0,value.indexOf('.') + 1 + decimal)\r\n        onChange && onChange(filter)\r\n      } else {\r\n        onChange && onChange(value)\r\n      }\r\n    } else {\r\n      onChange && onChange(value)\r\n    }\r\n  }\r\n\r\n  const onKeyPress = evt => {\r\n    if (evt.which !== 46 && evt.which !== 8 && evt.which !== 0 && (evt.which < 48 || evt.which > 57)) {\r\n        evt.preventDefault();\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    inputRef.current.setCustomValidity('')\r\n    if(inputRef.current && focus){\r\n      inputRef.current.focus();\r\n    }\r\n  },[focus])\r\n\r\n\r\n  return (\r\n    <Wrapper  unitPadding={unitPadding} inputWidth={inputWidth} inputHeight={inputHeight} className={className} style={{...styles}}>\r\n      <input placeholder={placeholder} type='number' title=\"\" onKeyPress={onKeyPress} onBlur={onBlur} onFocus={onFocus} disabled = {disabled} value={value} step = {isNaN(step) ? 0 : step} ref={inputRef} onChange={change} readOnly={readOnly}/>\r\n      <div className='unit'>{unitTip ? <UnderlineText tip={unitTip} text={unit}/> : unit}</div>\r\n    </Wrapper>    \r\n  )\r\n}","import './spinner.less'\r\nexport default function Spinner() {\r\n  return (\r\n    <div class=\"sleepContentView\">\r\n      <div class=\"circle\">\r\n      </div>\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/stage-one.7a1f5b00.svg\";","export default __webpack_public_path__ + \"static/media/stage-two.768445a6.svg\";","export default __webpack_public_path__ + \"static/media/stage-three.ee3fc1c4.svg\";","export default __webpack_public_path__ + \"static/media/succeed.02ebda03.svg\";","export default __webpack_public_path__ + \"static/media/faild.e2923f7c.svg\";","import { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '../../components/Button/Button'\r\nimport { PRIMARY } from '../../utils/Constants';\r\nimport useConfig from '../../hooks/useConfig'\r\nimport { useAlert } from 'react-alert'\r\nimport Spinner from './Spinner'\r\nimport BSC from '../../assets/img/bsc-logo.svg';\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport HECO from '../../assets/img/heco.svg'\r\nimport stageOne from './img/stage-one.svg'\r\nimport stageTwo from './img/stage-two.svg'\r\nimport stageThree from './img/stage-three.svg'\r\nimport apiProxy from '../../model/ApiProxy';\r\nimport succeed from './img/succeed.svg'\r\nimport FaildLogo from './img/faild.svg'\r\nexport default function Operate({ lang, wallet, amount, balance, initialize, isClaim, setSending, sending, setAmount, setIsClaim, isWalletConnected }) {\r\n  const config = useConfig();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const [isApprove, setIsApprove] = useState(false);\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [isFaild,setIsFaild] = useState(false)\r\n  const [bridgeState, setBridgeState] = useState({});\r\n  const [claimState, setClaimState] = useState({});\r\n  const [isClickClaim, setIsClickClaim] = useState(false);\r\n  const [actionElement, setActionElement] = useState(<Button type={PRIMARY} className='button-bridge' fontSize='18' label={lang['approve']} ></Button>);\r\n  const connect = () => {\r\n    wallet.connect()\r\n  }\r\n  const valid = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\r\n      if (res.valid) {\r\n        wallet.switchNetwork(config[res.toChainId])\r\n        setIsClaim(true)\r\n\r\n      }\r\n      setIsValid(res.valid)\r\n    }\r\n  }\r\n  const send = async () => {\r\n    if (amount === '' || amount === 0) {\r\n      alert.error(lang['amount-must-be-greater-than-zero'])\r\n      return;\r\n    }\r\n    if (+amount > balance) {\r\n      alert.error(lang['there-is-not-enough-amount'])\r\n      return;\r\n    }\r\n    if (!isWalletConnected.isFromConnected) {\r\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.from_chainId, lang).netWork} ${lang['send-finished-two']}`)\r\n      return;\r\n    }\r\n    setSending(true)\r\n    setIsFaild(false)\r\n    setBridgeState({\r\n      stageOne: false\r\n    })\r\n    let res = await apiProxy.request('freeze', [wallet.detail.chainId, wallet.detail.account, initialize.to_chainId, amount], { includeResponse: true })\r\n    if (res.success) {\r\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\r\n      setBridgeState({\r\n        stageOne: true,\r\n        stageTwo: false\r\n      })\r\n      window.setInterval(() => {\r\n        valid()\r\n      }, 3000)\r\n    } else {\r\n      setIsFaild(true)\r\n      setSending(false)\r\n    }\r\n  }\r\n  const claim = async () => {\r\n    if (!isWalletConnected.isToConnected) {\r\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.to_chainId, lang).netWork} ${lang['send-finished-two']}`)\r\n      return;\r\n    }\r\n    setIsClickClaim(true)\r\n    setIsFaild(false)\r\n    setClaimState({\r\n      stageOne: false,\r\n    })\r\n    let res = await apiProxy.request('mintDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\r\n    if (res.success) {\r\n      setClaimState({\r\n        stageOne: true,\r\n        stageTwo: false,\r\n      })\r\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\r\n      window.setInterval(() => {\r\n        valid()\r\n      }, 3000)\r\n    } else {\r\n      setIsClickClaim(false)\r\n      setIsFaild(true)\r\n    }\r\n  }\r\n  const reset = ()=>{\r\n    history.push('/bridge')\r\n  }\r\n  const approve = async () => {\r\n    const res = await apiProxy.request('unlockDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\r\n    if (res.success) {\r\n      setIsApprove(true);\r\n      loadApprove();\r\n    } else {\r\n      setIsApprove(false)\r\n      alert.error(lang['approve-faild'])\r\n    }\r\n  }\r\n  const loadApprove = async () => {\r\n    if (wallet.isConnected()) {\r\n      const result = await apiProxy.request('isDeriUnlocked', [wallet.detail.chainId, wallet.detail.account])\r\n      setIsApprove(result.isUnlocked);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (wallet.isConnected()) {\r\n      loadApprove();\r\n      valid()\r\n    }\r\n  }, [wallet.detail, initialize]);\r\n  useEffect(() => {\r\n    if (isValid) {\r\n      setBridgeState({\r\n        stageOne: true,\r\n        stageTwo: true,\r\n        stageThree: true,\r\n      })\r\n    } else if (isClickClaim) {\r\n      setClaimState({\r\n        stageOne: true,\r\n        stageTwo: true,\r\n        stageThree: true,\r\n      })\r\n      setSending(false)\r\n      setAmount('')\r\n    } else {\r\n    }\r\n  }, [isValid, initialize]);\r\n  useEffect(() => {\r\n    let element;\r\n    if (wallet.isConnected()) {\r\n      if (isValid) {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['claim']} onClick={claim} />\r\n      } else if (!isApprove) {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['approve']} onClick={approve} />\r\n      } else if(isClickClaim){\r\n        element = <button className='complete' onClick={reset}> <img alt='' src={succeed}/> {lang['complete']} </button>\r\n      }else {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['send']} onClick={send} ></Button>\r\n      }\r\n    } else {\r\n      element = <Button type={PRIMARY} className='button-bridge' label={lang['connect-wallet']} onClick={connect} ></Button>\r\n    }\r\n    setActionElement(element)\r\n  }, [isValid, wallet.detail, isApprove, amount, initialize, isWalletConnected,isClickClaim])\r\n  return (\r\n    <div className='operate'>\r\n      <div className='from-to-title'>\r\n        {lang['bridge']} {amount}  DERI {lang['from'].toLowerCase()} {initialize.from_network} {lang['to'].toLowerCase()} {initialize.to_network}\r\n      </div>\r\n      <div className='btn'>\r\n        {actionElement}\r\n      </div>\r\n      <div className='hint'>\r\n        {!isClaim && <div className='sending'>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\r\n              <div className='stage-text'>{lang['sending-deri-to-wormhole']} </div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne ? <div className='succeed'>\r\n                  <img alt='' src={succeed} />\r\n                </div> : <div className='pending'>\r\n                    <Spinner />\r\n                  </div>}\r\n              </>}\r\n              {!sending && !isFaild && <div className='staic'></div>}\r\n              {isFaild && <div><img src={FaildLogo} alt='' /></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\r\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sign']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne && <>\r\n                  {bridgeState.stageTwo ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n              </>}\r\n              {(!sending || !bridgeState.stageOne) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\r\n              <div className='stage-text'>{lang['bridge-signed']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne && bridgeState.stageTwo && <>\r\n                  {bridgeState.stageThree ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n\r\n              </>}\r\n              {(!sending || !bridgeState.stageTwo) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n        {isClaim && <div className='claiming'>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\r\n              <div className='stage-text'>{lang['claim-deri-ing']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne ? <div className='succeed'>\r\n                  <img alt='' src={succeed} />\r\n                </div> : <div className='pending'>\r\n                    <Spinner />\r\n                  </div>}\r\n              </>}\r\n              {!isClickClaim && !isFaild && <div className='staic'></div>}\r\n              {isFaild && <div><img src={FaildLogo} alt='' /></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\r\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sync']} </div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne && <>\r\n                  {claimState.stageTwo ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n              </>}\r\n              {(!isClickClaim || !claimState.stageOne) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\r\n              <div className='stage-text'>{lang['finished']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne && claimState.stageTwo && <>\r\n                  {claimState.stageThree ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n\r\n              </>}\r\n              {(!isClickClaim || !claimState.stageTwo) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction isNetwork(chainId, lang) {\r\n  chainId = +chainId\r\n  let obj = {}\r\n  switch (chainId) {\r\n    case 1:\r\n      obj.netWork = lang[\"ethereum\"];\r\n      obj.chainId = 1;\r\n      obj.img = ETH;\r\n      break;\r\n    case 56:\r\n      obj.netWork = lang[\"bsc\"];\r\n      obj.chainId = 56;\r\n      obj.img = BSC;\r\n      break;\r\n    case 128:\r\n      obj.netWork = lang[\"heco\"];\r\n      obj.chainId = 128;\r\n      obj.img = HECO;\r\n      break;\r\n    case 97:\r\n      obj.netWork = lang[\"bsc-testnet\"];\r\n      obj.chainId = 97;\r\n      obj.img = BSC;\r\n      break;\r\n    case 3:\r\n      obj.netWork = lang[\"ropsten\"];\r\n      obj.chainId = 3;\r\n      obj.img = ETH;\r\n      break;\r\n    case 256:\r\n      obj.netWork = lang[\"heco-testnet\"];\r\n      obj.chainId = 256;\r\n      obj.img = HECO;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return obj;\r\n}","export default __webpack_public_path__ + \"static/media/arrow-left.3530813d.svg\";","export default __webpack_public_path__ + \"static/media/disabled-down.3f7df0de.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DeriEnv, bg } from \"../../lib/web3js/index\";\r\nimport Input from '../../components/Input/Input'\r\nimport Operate from './Operate'\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\r\nimport apiProxy from '../../model/ApiProxy'\r\nimport arrow from './img/arrow-left.svg'\r\nimport disabledDown from './img/disabled-down.svg'\r\nimport BSC from '../../assets/img/BNB.svg';\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport deriLogo from '../../assets/img/logo.svg'\r\nimport HECO from '../../assets/img/heco.svg'\r\nimport down from '../../assets/img/arrow-down.svg'\r\nimport up from '../../assets/img/arrow-up.svg'\r\nimport classNames from 'classnames'\r\nimport './bridge.less'\r\nfunction Bridge({ wallet, lang }) {\r\n  const [amount, setAmount] = useState('');\r\n  const [balance, setBalance] = useState(0);\r\n  const isdev = DeriEnv.get() !== 'prod' ? true : false;\r\n  const netWork_text = isdev ?\r\n    [\r\n      {\r\n        text: lang['ropsten'],\r\n        id: 3,\r\n        img: ETH,\r\n      },\r\n      {\r\n        text: lang['bsc-testnet'],\r\n        id: 97,\r\n        img: BSC,\r\n      },\r\n      {\r\n        text: lang['heco-testnet'],\r\n        id: 256,\r\n        img: HECO,\r\n      }\r\n    ]\r\n    : [\r\n\r\n      {\r\n        text: lang['ethereum'],\r\n        id: 1,\r\n        img: ETH,\r\n      },\r\n      {\r\n        text: lang['bsc'],\r\n        id: 56,\r\n        img: BSC,\r\n      },\r\n      {\r\n        text: lang['heco'],\r\n        id: 128,\r\n        img: HECO,\r\n      }\r\n\r\n    ]\r\n\r\n  const [fromList, setFromList] = useState(netWork_text)\r\n  const [toList, setToList] = useState(netWork_text)\r\n  const [sending, setSending] = useState(false);\r\n  const [initialize, setInitialize] = useState(isdev ?\r\n    {\r\n      from_chainId: 97,\r\n      from_network: lang['bsc-testnet'],\r\n      to_chainId: 3,\r\n      to_network: lang['ropsten']\r\n    } : {\r\n      from_chainId: 1,\r\n      from_network: lang['ethereum'],\r\n      to_chainId: 56,\r\n      to_network: lang['bsc']\r\n    });\r\n  const [isClaim, setIsClaim] = useState(false);\r\n  const [dropdownList_from, setDropdownList_from] = useState(false);\r\n  const [dropdownList_to, setDropdownList_to] = useState(false);\r\n  const [From_img, setFrom_img] = useState(isNetwork(initialize.from_chainId, lang).img);\r\n  const [To_img, setTo_img] = useState(isNetwork(initialize.to_chainId, lang).img);\r\n  const selectListClassFrom = classNames('from-network-list', { 'show': dropdownList_from })\r\n  const selectListClassTo = classNames('to-network-list', { 'show': dropdownList_to })\r\n  const [isWalletConnected, setIsWalletConnected] = useState(\r\n    {\r\n      isFromConnected: false,\r\n      isToConnected: false\r\n    }\r\n  );\r\n  const isConnected = () => {\r\n    let isFromConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.from_chainId ? true : false) : false;\r\n    let isToConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.to_chainId ? true : false) : false;\r\n    let obj = {\r\n      isFromConnected: isFromConnected,\r\n      isToConnected: isToConnected\r\n    }\r\n    setIsWalletConnected(obj)\r\n  }\r\n\r\n  const showListFrom = () => {\r\n    if (sending) {\r\n      return;\r\n    }\r\n    setDropdownList_from(!dropdownList_from)\r\n  }\r\n  const showListTo = () => {\r\n    if (sending) {\r\n      return;\r\n    }\r\n    setDropdownList_to(!dropdownList_to)\r\n  }\r\n\r\n  const getValid = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\r\n      if (res.valid) {\r\n        setInitialize({\r\n          from_chainId: res.fromChainId,\r\n          from_network: isNetwork(res.fromChainId, lang).netWork,\r\n          to_chainId: res.toChainId,\r\n          to_network: isNetwork(res.toChainId, lang).netWork,\r\n        })\r\n        setFrom_img(isNetwork(res.fromChainId, lang).img)\r\n        setTo_img(isNetwork(res.toChainId, lang).img)\r\n        setAmount(bg(res.amount, -18).toString())\r\n        setSending(res.valid)\r\n      }\r\n    }\r\n  }\r\n\r\n  const getBalance = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getDeriBalance', [wallet.detail.chainId, wallet.detail.account])\r\n      setBalance(res)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getBalance()\r\n  }, [wallet.detail, initialize]);\r\n\r\n  useEffect(() => {\r\n    getValid()\r\n  }, [wallet.detail])\r\n\r\n  const select_from = obj => {\r\n    let Init = JSON.parse(JSON.stringify(initialize));\r\n    if (Init.to_chainId === obj.id) {\r\n      Init.from_chainId = initialize.to_chainId;\r\n      Init.from_network = initialize.to_network;\r\n      Init.to_chainId = initialize.from_chainId;\r\n      Init.to_network = initialize.from_network;\r\n    } else {\r\n      Init.from_chainId = obj.id;\r\n      Init.from_network = obj.text;\r\n    }\r\n    setInitialize(Init)\r\n    setDropdownList_from(!dropdownList_from)\r\n  }\r\n  const select_to = obj => {\r\n    let Init = JSON.parse(JSON.stringify(initialize));\r\n    if (Init.from_chainId === obj.id) {\r\n      Init.from_chainId = initialize.to_chainId;\r\n      Init.from_network = initialize.to_network;\r\n      Init.to_chainId = initialize.from_chainId;\r\n      Init.to_network = initialize.from_network;\r\n    } else {\r\n      Init.to_chainId = obj.id;\r\n      Init.to_network = obj.text;\r\n    }\r\n    setInitialize(Init)\r\n    setDropdownList_to(!dropdownList_to)\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    let from_arr;\r\n    let to_arr;\r\n    let from_one = netWork_text.filter(p => p.id === +initialize.from_chainId)[0]\r\n    let from_two = netWork_text.filter(p => p.id !== +initialize.from_chainId)[0]\r\n    let from_three = netWork_text.filter(p => p.id !== +initialize.from_chainId)[1]\r\n    let to_one = netWork_text.filter(p => p.id === +initialize.to_chainId)[0]\r\n    let to_two = netWork_text.filter(p => p.id !== +initialize.to_chainId)[0]\r\n    let to_three = netWork_text.filter(p => p.id !== +initialize.to_chainId)[1]\r\n    from_arr = [from_one, from_two, from_three]\r\n    to_arr = [to_one, to_two, to_three]\r\n    setFromList(from_arr)\r\n    setToList(to_arr)\r\n    setFrom_img(isNetwork(initialize.from_chainId, lang).img)\r\n    setTo_img(isNetwork(initialize.to_chainId, lang).img)\r\n    isConnected()\r\n\r\n  }, [initialize, wallet.detail])\r\n\r\n  const getAmount = (value) => {\r\n    setAmount(value)\r\n  }\r\n\r\n  return (\r\n    <div className='bridge-big-box'>\r\n      <div className='bridge-box'>\r\n        <div className='bridge-title'>\r\n          <div className='title'>\r\n            {lang['bridge']}\r\n          </div>\r\n          <div className='birdge-des'>\r\n            {lang['bridge-des']}\r\n          </div>\r\n        </div>\r\n        <div className='bridge-info'>\r\n          <div className='select-network-box'>\r\n            <div className='select-network-title'>\r\n              {lang['select-networks']}\r\n            </div>\r\n            <div className='select-network-from-to'>\r\n              <div className='from-network'>\r\n                <div className='from-title'>\r\n                  {lang['from']}\r\n                </div>\r\n                <div className='from-dropdown-list'>\r\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListFrom() }}>\r\n                    <div className='network-logo-connected'>\r\n                      <img src={From_img} alt='' />\r\n                      <span>{initialize.from_network}</span>\r\n                      <div className={isClaim ? 'connected-hide' : !isWalletConnected.isFromConnected ? 'is-connected' : 'connected'}>\r\n                        {(!isClaim && isWalletConnected.isFromConnected) ? lang['connected'] : lang['unconnected']}\r\n                      </div>\r\n                    </div>\r\n                    <img className='down-icon' src={sending ? disabledDown : dropdownList_from ? up : down} alt='' />\r\n                  </div>\r\n                  <ul className={selectListClassFrom}>\r\n                    {fromList.map((item, index) => {\r\n                      return (\r\n                        <>\r\n                          {initialize.from_network !== item.text ? <li key={index} className='wallet-li' onClick={() => select_from(item)}>\r\n                            <div className='li-logo-network'>\r\n                              <img alt='' src={item.img} /> <span> {item.text} </span>\r\n                            </div>\r\n                          </li> : ''}\r\n                        </>\r\n                      )\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div className='arrow'>\r\n                <img src={arrow} alt='' />\r\n              </div>\r\n              <div className='to-network'>\r\n                <div className='to-title'>\r\n                  {lang['to']}\r\n                </div>\r\n                <div className='to-dropdown-list'>\r\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListTo() }}>\r\n                    <div className='network-logo-connected'>\r\n                      <img src={To_img} alt='' />\r\n                      <span>{initialize.to_network}</span>\r\n                      <div className={!isClaim ? 'connected-hide' : !isWalletConnected.isToConnected ? 'is-connected' : 'connected'}>\r\n                        {(isClaim && isWalletConnected.isToConnected) ? lang['connected'] : lang['unconnected']}\r\n                      </div>\r\n                    </div>\r\n                    <img className='down-icon' src={sending ? disabledDown : dropdownList_to ? up : down} alt='' />\r\n                  </div>\r\n                  <ul className={selectListClassTo}>\r\n                    {toList.map((item, index) => {\r\n                      return (\r\n                        <>\r\n                          {initialize.to_network !== item.text ? <li key={index} className='wallet-li' onClick={() => select_to(item)}>\r\n                            <div className='li-logo-network'>\r\n                              <img alt='' src={item.img} /> <span> {item.text} </span>\r\n                            </div>\r\n                          </li> : ''}\r\n                        </>\r\n                      )\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='set-amount'>\r\n            <div className='set-amount-title'>\r\n              {lang['set-amount']}\r\n            </div>\r\n            <div className='set-amount-box'>\r\n              <div className='input-deri'>\r\n                <Input placeholder='0' value={amount} onChange={getAmount} decimal={18} disabled={sending} className='input-box' />\r\n                <span><img alt='' src={deriLogo} className='amount-img' /> DERI</span>\r\n              </div>\r\n              <div className='total-deri'>\r\n                {lang['total-amount']} <DeriNumberFormat value={balance} decimalScale={4} thousandSeparator={true} /> DERI\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='bridge-operate-hint'>\r\n            <Operate lang={lang} sending={sending} wallet={wallet} balance={balance} isWalletConnected={isWalletConnected} amount={amount} isClaim={isClaim} initialize={initialize} setIsClaim={setIsClaim} setSending={setSending} setAmount={setAmount} />\r\n          </div>\r\n          <div className='bridge-to-polygon'>\r\n            <div>\r\n              <div className='birdge-to-polygon-title'>\r\n                {lang['bridge-to-polygon']}\r\n                <span className='polygon-title'>\r\n                  <a rel='noreferrer' target='_blank' href='https://bridge.arbitrum.io/'> Arbitrum</a>\r\n                </span> |\r\n                <span className='polygon-title'>\r\n                  <a rel='noreferrer' target='_blank' href='https://wallet.matic.network/bridge'> Polygon</a>\r\n                </span> |\r\n                <span className='polygon-title'>\r\n                  <a rel='noreferrer' target='_blank' href='https://bridge.zksync.io/'> zkSync Era</a>\r\n                </span>\r\n              </div>\r\n              <div className='bridge-to-polygon-des'>\r\n                {lang['bridge-to-polygon-des']}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction isNetwork(chainId, lang) {\r\n  chainId = +chainId\r\n  let obj = {}\r\n  switch (chainId) {\r\n    case 1:\r\n      obj.netWork = lang[\"ethereum\"];\r\n      obj.chainId = 1;\r\n      obj.img = ETH;\r\n      break;\r\n    case 56:\r\n      obj.netWork = lang[\"bsc\"];\r\n      obj.chainId = 56;\r\n      obj.img = BSC;\r\n      break;\r\n    case 128:\r\n      obj.netWork = lang[\"heco\"];\r\n      obj.chainId = 128;\r\n      obj.img = HECO;\r\n      break;\r\n    case 97:\r\n      obj.netWork = lang[\"bsc-testnet\"];\r\n      obj.chainId = 97;\r\n      obj.img = BSC;\r\n      break;\r\n    case 3:\r\n      obj.netWork = lang[\"ropsten\"];\r\n      obj.chainId = 3;\r\n      obj.img = ETH;\r\n      break;\r\n    case 256:\r\n      obj.netWork = lang[\"heco-testnet\"];\r\n      obj.chainId = 256;\r\n      obj.img = HECO;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return obj;\r\n}\r\nexport default inject('wallet')(observer(Bridge))"],"sourceRoot":""}